{"version":3,"sources":["components/AddCategory.js","helpers/GetGift.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","placeholder","value","onChange","target","handleInputChange","getGift","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KAiBA,OAEI,aADA,CACA,qBACA,sBAAMC,SAbS,SAACC,GAChBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAOlB,SACI,uBACAO,KAAK,OACLC,YAAY,eACZC,MAAOV,EACPW,SAAU,SAACR,GAAD,OAvBM,SAACA,GAErBF,EAAcE,EAAES,OAAOF,OAqBJG,CAAkBV,W,+BC7BhCW,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DAEVC,EAFU,0FAE+EC,UAAUH,GAFzF,sBAIGI,MAAMF,GAJT,cAIVG,EAJU,gBAKOA,EAAKC,OALZ,uBAKPC,EALO,EAKPA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAX3B,kBAcPM,GAdO,4CAAF,sDCCPO,EAAc,SAAC,GAAoB,EAAnBJ,GAAoB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGnC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IAChB,4BAAIA,QCFPO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SACrB,ECJwB,SAACA,GAEzB,MAAyBhB,mBAAS,CAC9BuB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAaC,EAAb,KAkBA,OAbAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAEEH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAG1B,CAACpB,IAGIqB,EDhBuBK,CAAa1B,GAA/Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QACnB,OAEI,qCAEA,6BAAKpB,IAEJoB,GAAW,wCAER,qBAAKJ,UAAU,YAAf,SACI,6BAEAH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAESA,GADAA,EAAIC,eEjBpBgB,EAAa,WAKtB,MAAoC3C,mBAAS,CAAC,eAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAOA,OAEI,cADA,CACA,sBACI,+CACI,cAAC,EAAD,CAAaA,cAAgBA,IACjC,uBAEA,6BAGI6C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCvB7B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.859a8ca3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue,setInputValue] = useState('')\r\n\r\n    const handleInputChange=(e)=>{\r\n        //toma el value de el elemento imput y lo agrega al hook useState\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        //Escucha el evento del submit del input y toma el array del hook para agregarle el valor del input que tiene el hook        \r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cate=>[inputValue,...cate]);\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        //componente input \r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            placeholder=\"add category\"\r\n            value={inputValue}\r\n            onChange={(e)=>handleInputChange(e)}\r\n            />\r\n        </form>\r\n\r\n        </>\r\n    )\r\n}\r\n//El proptype obliga a usar el componente\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","  \r\nexport const getGift= async(category)=>{\r\n\r\n        let url =`https://api.giphy.com/v1/gifs/search?api_key=nMcGQSUGs4HqYojbE9qR1uuF1srBeiWm&q=${ encodeURI(category) }&limit=10`;\r\n        \r\n        let resp = await fetch(url)\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map(img=>{\r\n            return{\r\n                id:img.id,\r\n                title:img.title,\r\n                url:img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        return gifs;\r\n       //console.log(gifs)\r\n    }\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title,url}) => {\r\n    \r\n    //console.log(title)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeft\" >\r\n            <img src={url} alt={title} />\r\n                <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n//import React, {  useEffect, useState} from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {    \r\n    const {data:images,loading} = useFetchGifs(category);\r\n    return (\r\n\r\n        <>\r\n        \r\n        <h3>{category}</h3>\r\n\r\n        {loading && <p>Loading</p>}\r\n            \r\n            <div className=\"card-grid\">\r\n                <ol>\r\n                {\r\n                images.map(img=>(\r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        { ...img }/>\r\n                    ))        \r\n                }\r\n\r\n                </ol>\r\n            </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGift } from '../helpers/GetGift';\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state,setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    useEffect(() => {\r\n        //getGift();\r\n        getGift(category)\r\n            .then(imgs=>{\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading:false\r\n                    })       \r\n        })\r\n    },[category])\r\n\r\n\r\n    return state\r\n}","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid} from './components/GifGrid'\r\n\r\nexport const GifExpertApp=()=>{\r\n\r\n    //const categorias = ['one punch','Samurai X','DragonBall']\r\n\r\n    \r\n    const [categorias, setCategories] = useState(['DragonBall'])\r\n    /*\r\n    const handleAdd=()=>{\r\n        setCategories([...categorias, 'HunterXHunter'])\r\n    }*/\r\n    \r\n    \r\n    return (\r\n        //llamada a componente que escribe la busqueda\r\n        <>\r\n            <h2> Gif Service </h2>\r\n                <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n            \r\n            <ol>\r\n                { \r\n                //llamada a componente que muestra los resultados  \r\n                categorias.map(category=>(\r\n                    <GifGrid\r\n                        key={category}\r\n                        category={category}\r\n                    />\r\n                ))  \r\n                }\r\n\r\n            </ol>\r\n            \r\n\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}